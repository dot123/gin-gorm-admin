// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/dot123/gin-gorm-admin/api/v1"
	"github.com/dot123/gin-gorm-admin/internal/middleware/jwt"
	"github.com/dot123/gin-gorm-admin/internal/models/file"
	"github.com/dot123/gin-gorm-admin/internal/models/msg"
	"github.com/dot123/gin-gorm-admin/internal/models/role"
	"github.com/dot123/gin-gorm-admin/internal/models/user"
	"github.com/dot123/gin-gorm-admin/internal/models/util"
	"github.com/dot123/gin-gorm-admin/internal/service"
	"github.com/dot123/gin-gorm-admin/pkg/fileStore"
)

import (
	_ "github.com/dot123/gin-gorm-admin/docs"
)

// Injectors from wire.go:

func BuildInjector(local *fileStore.Local) (*Injector, func(), error) {
	db, cleanup, err := InitGormDB()
	if err != nil {
		return nil, nil, err
	}
	trans := &util.Trans{
		DB: db,
	}
	userRepo := &user.UserRepo{
		DB: db,
	}
	roleRepo := &role.RoleRepo{
		DB: db,
	}
	userSrv := &service.UserSrv{
		TransRepo: trans,
		UserRepo:  userRepo,
		RoleRepo:  roleRepo,
	}
	roleSrv := &service.RoleSrv{
		RoleRepo: roleRepo,
	}
	jwtJWT := &jwt.JWT{
		UserSrv: userSrv,
		RoleSrv: roleSrv,
	}
	userApi := &v1.UserApi{
		UserSrv: userSrv,
	}
	monitorSrv := &service.MonitorSrv{}
	monitorApi := &v1.MonitorApi{
		MonitorSrv: monitorSrv,
	}
	fileRepo := &file.FileRepo{
		DB: db,
	}
	fileSrv := &service.FileSrv{
		FileRepo: fileRepo,
		Local:    local,
	}
	fileApi := &v1.FileApi{
		FileSrv: fileSrv,
	}
	msgRepo := &msg.MsgRepo{
		DB: db,
	}
	msgSrv := service.NewMsgSrv(msgRepo)
	msgApi := &v1.MsgApi{
		MsgSrv: msgSrv,
	}
	router := &Router{
		MyJwt:      jwtJWT,
		UserApi:    userApi,
		MonitorApi: monitorApi,
		FileApi:    fileApi,
		MsgApi:     msgApi,
	}
	engine := InitGinEngine(router)
	injector := &Injector{
		Engine: engine,
	}
	return injector, func() {
		cleanup()
	}, nil
}
